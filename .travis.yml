matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: 1.25.0  # Must align with `build/version.rs`.
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: stable
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: beta
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: nightly
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: android
      jdk: oraclejdk8
      sudo: required # false for Container-Based Infrastructure, required for Sudo-enabled Infrastructure

      before_cache:
        - rm -f ${TRAVIS_BUILD_DIR}/gradle/caches/modules-2/modules-2.lock # Avoid to repack it due locks
        - rm -f ${TRAVIS_BUILD_DIR}/gradle/caches/3.3/classAnalysis/classAnalysis.lock
        - rm -f ${TRAVIS_BUILD_DIR}/gradle/caches/3.3/jarSnapshots/jarSnapshots.lock

      cache:
        directories:
          - ${TRAVIS_BUILD_DIR}/gradle/caches/
          - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/

      notifications:
        email: false

      android:
        components: # Cookbooks version: https://github.com/travis-ci/travis-cookbooks/tree/9c6cd11
          - tools # Update preinstalled tools from revision 24.0.2 to 24.4.1
          - build-tools-25.0.2 # Match build-tools version used in build.gradle
          - platform-tools # Update platform-tools to revision 25.0.3+
          - tools # Update tools from revision 24.4.1 to 25.2.5
          - add-on
          - extra
          - sys-img-armeabi-v7a-android-22
        licenses:
          - android-sdk-preview-license-.+
          - android-sdk-license-.+
          - google-gdk-license-.+

      env:
        global:
          - API=25 # Android API level 25 by default
          - TAG=google_apis # Google APIs by default, alternatively use default
          - ABI=armeabi-v7a # ARM ABI v7a by default
          - QEMU_AUDIO_DRV=none # Disable emulator audio to avoid warning
          - GRADLE_USER_HOME="${TRAVIS_BUILD_DIR}/gradle" # Change location for Gradle Wrapper and cache
          - ANDROID_HOME=/usr/local/android-sdk-25.0.2 # Depends on the cookbooks version used in the VM
          - TOOLS=${ANDROID_HOME}/tools # PATH order matters, exists more than one emulator script
          - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
          - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)

      before_install:
        - export EMULATOR="system-images;android-25;${TAG};${ABI}" # Used to install/create emulator
        - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid warning

      install:
        # List and delete unnecessary components to free space
        # Update sdk tools to latest version and install/update components
        - sdkmanager "platforms;android-25" # Latest platform required by SDK tools
        # - sdkmanager tools
        # - sdkmanager "system-images;android-25;default;armeabi-v7a"
        # - sdkmanager "extras;android;m2repository"
        # - sdkmanager "extras;google;m2repository"
        # - sdkmanager "$EMULATOR" # Install emulator system image
        # Create and start emulator
        - echo no | "$ANDROID_HOME/tools/bin/avdmanager" create avd --force -n test -k "system-images;android-;default;armeabi-v7a"
        - $ANDROID_HOME/emulator/emulator -avd emulatorApi24 -no-audio -no-window &
        # Start adbd, wait for device connected and show android serial to avoid heavy tasks in parallel
        - adb wait-for-device get-serialno
        # Show version and download Gradle Wrapper if it's not already cached
        - ./gradlew --version
        # Clean project and download missing dependencies and components
        - ./gradlew clean
        # Check components status
        - sdkmanager --list || true
        # Run all checks
        - ./gradlew check -PdisablePreDex

      before_script:
        # Wait for emulator fully-booted and disable animations
        - android-wait-for-emulator
        - adb shell settings put global window_animation_scale 0 &
        - adb shell settings put global transition_animation_scale 0 &
        - adb shell settings put global animator_duration_scale 0 &
        - sleep 30
        - adb shell input keyevent 82 &
        - sleep 15

      script:
        # Run all device checks
        - ./gradlew connectedCheck -x library:signArchives -PdisablePreDex

      after_script:
        # Show tests and lint results
        - cat ${TRAVIS_BUILD_DIR}/*/build/outputs/androidTest-results/connected/*
        - cat ${TRAVIS_BUILD_DIR}/library/build/reports/lint-results.xml
        - cat ${TRAVIS_BUILD_DIR}/demo/build/reports/lint-results.xml
